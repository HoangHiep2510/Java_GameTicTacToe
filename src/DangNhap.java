
import java.awt.AWTException;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Admin
 */
public class DangNhap extends javax.swing.JFrame {

    /**
     * Creates new form DangNhap
     */
    private TTT game;
    
    public DangNhap(TTT game) {
        initComponents();
        this.game = game;
        if(game.tttk == 1){
            btnDK.setVisible(false);
            
        }
        else{
            btnDK.setVisible(true);
        }
    }
   


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTK = new javax.swing.JTextField();
        txtMK = new javax.swing.JPasswordField();
        btnDN = new javax.swing.JButton();
        btnDK = new javax.swing.JButton();
        btnLL = new javax.swing.JButton();
        lblTB = new javax.swing.JLabel();
        btnThoat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Đăng nhập");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("THÔNG TIN ĐĂNG NHẬP");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Tài khoản: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Mật khẩu: ");

        txtTK.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtMK.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnDN.setBackground(new java.awt.Color(0, 204, 204));
        btnDN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDN.setForeground(new java.awt.Color(255, 255, 255));
        btnDN.setText("Đăng nhập");
        btnDN.setToolTipText("");
        btnDN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDNActionPerformed(evt);
            }
        });
        btnDN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                enter(evt);
            }
        });

        btnDK.setBackground(new java.awt.Color(0, 204, 204));
        btnDK.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDK.setForeground(new java.awt.Color(255, 255, 255));
        btnDK.setText("Đăng ký");
        btnDK.setToolTipText("");
        btnDK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDKActionPerformed(evt);
            }
        });

        btnLL.setBackground(new java.awt.Color(0, 204, 204));
        btnLL.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnLL.setForeground(new java.awt.Color(255, 255, 255));
        btnLL.setText("Làm lại");
        btnLL.setToolTipText("");
        btnLL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLLActionPerformed(evt);
            }
        });

        lblTB.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTB.setForeground(new java.awt.Color(255, 0, 51));
        lblTB.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        btnThoat.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDN)
                                .addGap(61, 61, 61)
                                .addComponent(btnDK)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnLL))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtTK, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                                            .addComponent(txtMK)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(183, 183, 183)
                                        .addComponent(btnThoat)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(lblTB, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTB, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDN)
                    .addComponent(btnDK)
                    .addComponent(btnLL))
                .addGap(18, 18, 18)
                .addComponent(btnThoat)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDKActionPerformed
        DangKy frmDangKy = new DangKy(this.game);
        frmDangKy.setVisible(true);
        frmDangKy.setLocationRelativeTo(this);
    }//GEN-LAST:event_btnDKActionPerformed
    
    
    private void btnDNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDNActionPerformed
        
        String taikhoan = txtTK.getText();
        String matkhau = String.valueOf(txtMK.getPassword());
        matkhau = Connect.MD5(matkhau);
        if(taikhoan.equals("") ||matkhau.equals("")){
            JOptionPane.showMessageDialog(this,"Bạn phải nhập thông tin tài khoản mật khẩu","Thông báo",JOptionPane.ERROR_MESSAGE);
            txtTK.requestFocus();
        }
        else{
            lblTB.setText(Connect.getConnection());
            if(lblTB.getText().equals("")){
                String sql = "select * from users where UserID=? and pass=?";
                PreparedStatement pstm;
                try{
                    pstm = Connect.conn.prepareStatement(sql);
                    pstm.setString(1, taikhoan);
                    pstm.setString(2, matkhau);
                    try(ResultSet rs = pstm.executeQuery()){
                        if(rs.next()){
                            if(game.tttk == 1){
                                if(!rs.getString("userid").equals(txtTK.getText())){
                                    game.userName(rs.getString("name"));
                                    game.userID(rs.getString("userid"));
                                    game.userPass(rs.getString("pass"));
                                    game.userQuyen(rs.getInt("ROLElEVEL"));
                                    game.tttk = 0;
                                    ThongTinTaiKhoan frmTTTK = new ThongTinTaiKhoan(this.game);
                                    frmTTTK.setVisible(true);
                                    frmTTTK.setLocationRelativeTo(this);
                                    this.dispose();
                                }
                                else
                                    JOptionPane.showMessageDialog(this, rs.getString("userid"));
                                
                            }
                            else if(game.DN1 == 1){
                                if(rs.getInt("Useronl")!=1){
                                    String ID = rs.getString("userid");
                                    String nameString = rs.getString("NAME");
                                    game.setName1(nameString);
                                    game.disablebuttonDN1();
                                    game.showbuttonDX1();
                                    game.showbuttonLS1();
                                    game.setDP1();
                                    game.getid1(ID);
                                    game.DN1 = 0;
                                    Connect.setQuery("UPDATE users set USERONL=1 where NAME=N'"+nameString+"'"); 
                                    this.dispose();
                                }else{
                                    lblTB.setText("Tài khoản đã đang dược sử dụng");
                                    txtTK.selectAll();
                                    txtTK.requestFocus();
                                }
                                
                            }
                            else if(game.DN2 == 1){
                                if(rs.getInt("Useronl")!=1){
                                    String ID = rs.getString("userid");
                                    String nameString = rs.getString("NAME");
                                    game.setName2(nameString);
                                    game.disablebuttonDN2();
                                    game.showbuttonDX2();
                                    game.showbuttonLS2();
                                    game.setDP2();
                                    game.getid2(ID);
                                    game.DN2 = 0;
                                    Connect.setQuery("UPDATE users set USERONL=1 where NAME=N'"+nameString+"'");
                                    this.dispose();
                                }else{
                                    lblTB.setText("Tài khoản đã đang dược sử dụng");
                                    txtTK.selectAll();
                                    txtTK.requestFocus();
                                }
                            }
                        }
                        else
                            lblTB.setText("Thông tin đăng nhập không hợp lệ");
                        rs.close();
                    }
                    pstm.close();
                }catch(SQLException ex){
                    lblTB.setText("Lỗi: Kết nối CSDL");
                }
            }
        }
    }//GEN-LAST:event_btnDNActionPerformed

    private void btnLLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLLActionPerformed
        txtTK.setText("");
        txtMK.setText("");
        lblTB.setText("");
        txtTK.requestFocus();
    }//GEN-LAST:event_btnLLActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void enter(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enter
        // TODO add your handling code here:
        
    }//GEN-LAST:event_enter
    
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDK;
    private javax.swing.JButton btnDN;
    private javax.swing.JButton btnLL;
    private javax.swing.JButton btnThoat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblTB;
    private javax.swing.JPasswordField txtMK;
    private javax.swing.JTextField txtTK;
    // End of variables declaration//GEN-END:variables
}
